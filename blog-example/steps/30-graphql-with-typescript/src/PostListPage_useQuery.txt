import React from "react";
import PostList from "./PostList";
import { gql, useQuery } from "@apollo/client";

const LoadPostQuery = gql`
  query PostListPage {
    posts {
      date
      title
      teaser(maxLength: 20)
      id
    }
  }
`;

type Post = {
  date: string;
  title: string;
  teaser: string;
  id: string;
};

type LoadPostQueryResult = {
  posts: Post[];
};

export default function PostListPage() {
  const { loading, data, error } = useQuery<LoadPostQueryResult>(LoadPostQuery);

  if (loading) {
    return <h1>Loading, please wait...</h1>;
  }

  if (error) {
    console.error(error);
    return <h1>Error! Loading failed!</h1>;
  }

  assertData(data);

  return <PostList posts={data.posts} />;
}

function assertData<T>(t: T): asserts t is NonNullable<T> {
  if (!t) {
    throw new Error("Data not defined");
  }
}
